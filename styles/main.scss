// This Sass file was developed using the "mobile first" approach, with a focus on designing for smartphones initially

@import url('https://fonts.googleapis.com/css2?family=League+Spartan:wght@700&display=swap');

@import 'base';

main {
    background-color: var(--main-bg);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 2em 0;
}

#calculator {
    height: 80%;
    width: 85%;
}

header {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    color: var(--text-color);

    h1 {
        font-size: 2.1em;
        padding-bottom: 0.2em;
    }
}

.toggle-label {
    letter-spacing: 2px;
    padding-bottom: 0.4em;
}

.toggle-label, .switch-themes div {
    font-size: 0.9rem;
    line-height: 0.9;
}

.toggle-container {
    display: flex;
    gap: 2em;
    align-items: flex-end;
}
.switch-themes {
    display: flex;
    justify-content: space-around;
}
.toggle-switch {
    display: flex;
    flex-direction: column;
    gap: 0.5em;
}
.toggle-slider {
    width: 4em;
    height: 1.5em;
    background-color: var(--toggle-bg);
    border-radius: 1.5em;
    position: relative;
    cursor: pointer;

    input {
        cursor: pointer;
    }

    button {
        background: var(--slider-button-bg);
        width: 1.1em;
        height: 1.1em;
        border: none;
        border-radius: 50%;
        pointer-events: none;
        position: absolute;
        top: 0.35em;
        left: 0.3em;
        transition: all 0.3s ease-in-out;
    }

    #position1:checked ~ button {
        left: 0.4em;
    }
    #position2:checked ~ button {
        left: 1.9em;
    }
    #position3:checked ~ button {
        left: 3.3em;
    }

    input[type="radio"] {
        transform: scale(1.2);
    }
}

#position1, #position2, #position3 {
    position: absolute;
    top: 0.4em;
    opacity: 0;
}
#position1 {
    left: 0.6em;
}
#position2 {
    left: 2em;
}
#position3 {
    left: 3.3em;
}

#screen {
    background-color: var(--screen-bg);
    width: 100%;
    border-radius: 0.6em;
    padding: 1em;
    min-height: 6em;
    
    #operations {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-end;
        min-height: 4.5em;
        padding: 0 0.7em;

        .current-operation, .previous-operation {
            display: flex;
            flex-direction: column;
            word-wrap: break-word;
            word-break: break-all;
        }
        .current-operation {
            font-size: 2.8em;
            color: var(--text-color); 
        }
        .previous-operation {
            font-size: 1.2em;
            color: var(--default-key-shadow);
            padding-bottom: 5px;
        }
    }
}

#calculator {
    display: flex;
    flex-direction: column;
    gap: 1.5em;
}

.btn7 {
    grid-area: btn7;
}
.btn8 {
    grid-area: btn8;
}
.btn9 {
    grid-area: btn9;
}
.btnDEL {
    grid-area: btnDEL;
}
.btn6 {
    grid-area: btn6;
}
.btn5 {
    grid-area: btn5;
}
.btn4 {
    grid-area: btn4;
}
.btnPlus {
    grid-area: btnPlus;
}
.btn3 {
    grid-area: btn3;
}
.btn2 {
    grid-area: btn2;
}
.btn1 {
    grid-area: btn1;
}
.btnMinus {
    grid-area: btnMinus;
}
.btnDot {
    grid-area: btnDot;
}
.btn0 {
    grid-area: btn0;
}
.btnDivide {
    grid-area: btnDivide;
}
.btnMultiply {
    grid-area: btnMultiply;
}
.btnRESET {
    grid-area: btnRESET;
}
.btnEqual {
    grid-area: btnEqual;
}
#keypad {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(5, 3.8em);
    grid-template-areas:
    "btn7 btn8 btn9 btnDEL"
    "btn4 btn5 btn6 btnPlus"
    "btn1 btn2 btn3 btnMinus"
    "btnDot btn0 btnDivide btnMultiply"
    "btnRESET btnRESET btnEqual btnEqual";
    background-color: var(--keypad-bg);
    gap: 0.8em;
    padding: 1.4em;
    border-radius: 0.7em;
}
.button {
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    border-radius: 0.35em;
    outline: none;
    background-color: var(--default-key-bg);
    box-shadow: inset 0px -9px 0px -5px var(--default-key-shadow);
    transition: background-color 0.1s ease;

    &:active {
        transform: translateY(2px);
        background-color: var(--default-key-bg-active);
    }

    &:hover {
        background-color: var(--default-key-bg-active);
        cursor: pointer;
    }
}
.button span {
    font-size: 2.2em;
    color: var(--default-key-color);
}
.btnRESET, .btnDEL {
    background-color: var(--dr-key-bg);
    box-shadow: inset 0px -9px 0px -5px var(--dr-key-shadow);

    &:active, &:hover {
        background-color: var(--dr-key-bg-active);
    }

    span{
        font-size: 1.4em;
        color: var(--dr-key-color);
    }
}
.btnEqual {
    background-color: var(--equal-key-bg);
    box-shadow: inset 0px -9px 0px -5px var(--equal-key-shadow);

    &:active, &:hover {
        background-color: var(--equal-key-bg-active);
    }
    
    span{
        font-size: 1.4em;
        color: var(--equal-key-color);
    } 
}

@media screen and (max-width: 280px) {
    header  {
        flex-direction: column;
        align-items: center;
        gap: 0.6em;
    }

    #keypad {
        grid-template-rows: repeat(5, 3em);
        gap: 0.8em;
        padding: 1em;
        border-radius: 0.7em;
    }
}

@media screen and (min-width: 600px) and (max-width: 1024px) {
    @import 'tablet';
}

@media screen and (min-width: 1025px) {
    @import 'desktop';
}